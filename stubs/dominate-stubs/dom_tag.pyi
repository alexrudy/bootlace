from typing import Any
from typing import overload
from typing import Iterator
from typing import Self

class dom_tag:
    attributes: dict[str, str]
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @overload
    def __getitem__(self, key: str) -> str: ...
    @overload
    def __getitem__(self, key: int) -> "Self": ...
    def __setitem__(self, key: str, value: str) -> None: ...
    def add(self, *args: str | int | "dom_tag") -> "dom_tag": ...
    def remove(self, *args: "dom_tag") -> "dom_tag": ...
    def clear(self) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> "Iterator[dom_tag]": ...
    def render(self) -> str: ...
